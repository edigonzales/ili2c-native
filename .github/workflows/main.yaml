name: ili2c-native
on:
  push:
    paths-ignore:
      - '**.md'
      - 'docs/**.md'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version?'
        required: true

jobs:  
  build:
    env:
      INSTALL_DIR: jdk
      NIK_HOME: jdk/bellsoft-liberica-vm-core-openjdk17-22.2.0
    strategy:
      matrix:
        #os: ['ubuntu-latest']
        os: ['macos-latest']
        # os: ['ubuntu-20.04', 'macos-10.15', 'windows-latest']
        # include:
        #   - os: 'ubuntu-20.04'
        #     label: 'linux'
        #     package: 'deb'
        #     icon: 'icons/icon-compiler-128x128.png'
        #     asset_prefix: 'ili2c_'
        #     asset_suffix: '-1_amd64'
        #   - os: 'macos-10.15'
        #     label: 'mac'
        #     package: 'pkg'
        #     icon: 'icons/icon-compiler-128x128.icns'
        #     asset_prefix: 'ili2c-'
        #     asset_suffix: ''
        #   - os: 'windows-latest'
        #     label: 'win'
        #     package: 'exe'
        #     icon: 'icons/icon-compiler-128x128.ico'
        #     asset_prefix: 'ili2c-'
        #     asset_suffix: ''
    runs-on: ${{matrix.os}}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 'Download Liberica NIK'
        run: |
          curl -L https://download.bell-sw.com/vm/22.2.0/bellsoft-liberica-vm-core-openjdk17.0.4.1+1-22.2.0+3-macos-amd64.tar.gz -o libericavm.zip
          mkdir -p ${{ env.INSTALL_DIR }}
          tar -C ${{ env.INSTALL_DIR }} -xzf libericavm.zip
          ls -la

      - name: 'Download ili2c'
        run: |
          curl -L https://downloads.interlis.ch/ili2c/ili2c-5.3.0.zip -o ili2c.zip
          unzip ili2c.zip -d ili2c

      - name: 'Create native image'
        run: |
          export PATH=${{ env.NIK_HOME }}/bin:$PATH
          native-image -Djava.awt.headless=false --enable-url-protocols=http,https --no-fallback -H:ReflectionConfigurationFiles=conf-dir/reflect-config.json -H:ResourceConfigurationFiles=conf-dir/resource-config.json -jar ili2c/ili2c.jar ili2c
          ls -la
          ls -la jdk
          ls -la jdk/bellsoft-liberica-vm-core-openjdk17-22.2.0



      # - name: 'Download zipped ili2c release'
      #   run: |
      #     curl -L https://downloads.interlis.ch/ili2c/ili2c-${{ github.event.inputs.version }}.zip -o ili2c.zip

      # - name: 'Unzip ili2c release'
      #   run: |
      #     unzip ili2c.zip

      # - name: 'Setup Java 17'
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: 17
      #     distribution: 'liberica'

      # - name: 'Get dependencies (jdeps)'
      #   run: |
      #     echo "DEPS=$(jdeps --class-path './*' --multi-release base -recursive --ignore-missing-deps --print-module-deps ili2c.jar)" >> $GITHUB_ENV
      #   shell: bash

      # - name: 'Create JRE (jlink)'
      #   run: |
      #     jlink --add-modules ${{env.DEPS}} --output ili2c-jre

      # - name: 'Create package (jpackage)'
      #   run: |
      #     jpackage --icon ${{matrix.icon}} --name ili2c --type ${{matrix.package}} --input . --main-jar ili2c.jar -d output --runtime-image ili2c-jre --app-version ${{ github.event.inputs.version }}
      #   shell: bash

      # - name: List all files in output directory
      #   run: ls -la output
      #   shell: bash

      # - name: List all files in project root directory
      #   run: ls -la 
      #   shell: bash

      # - name: 'Setup Java 8'
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: 8
      #     distribution: 'liberica'

      # - name: Upload file to bucket
      #   shell: bash
      #   run: |
      #     ./gradlew uploadFile 
      #   env:
      #     FILENAME: ${{matrix.asset_prefix}}${{ github.event.inputs.version }}${{matrix.asset_suffix}}.${{matrix.package}}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: "eu-central-1"
